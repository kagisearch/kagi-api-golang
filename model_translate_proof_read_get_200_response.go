/*
Kagi API

The search API provides programmatic access to data that powers our search results & more. Kagi APIs  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  Quick start for all APIs:  - Get the API key (requires a Kagi account). - Top off your API credits. - Call the API.  ### Free  - Kagi Small Web RSS feed (public)  ### Unofficial Client Libraries  Libraries created by Kagi users and third parties.  - kagigo for Go - FastGPT & Universal Summarizer - kagi-api for Rust - kagi-dotnet for C#/.NET  ### Beta Status  The API is currently in a \"v0\" beta status. Changes will be ongoing, and will be added to the documentation below as features become available.  Use at your own risk, but please reach out to us if you have any questions.  See the Support and Community section for details. ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - Bug Reports - Q&A Forum - API Feature Requests  ### Discord Join our Discord! Good for quick questions, chatting about thing you've made with our APIs! 

API version: 0.0.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateProofReadGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateProofReadGet200Response{}

// TranslateProofReadGet200Response struct for TranslateProofReadGet200Response
type TranslateProofReadGet200Response struct {
	// The proofread and corrected text
	CorrectedText *string `json:"corrected_text,omitempty"`
	DetectedLanguage *TranslateProofReadGet200ResponseDetectedLanguage `json:"detected_language,omitempty"`
	Changes []TranslateProofReadGet200ResponseChangesInner `json:"changes,omitempty"`
	// Overall explanation of corrections or acknowledgment of error-free text
	CorrectionsSummary *string `json:"corrections_summary,omitempty"`
	ToneAnalysis *TranslateProofReadGet200ResponseToneAnalysis `json:"tone_analysis,omitempty"`
	VoiceConsistency *TranslateProofReadGet200ResponseVoiceConsistency `json:"voice_consistency,omitempty"`
	RepetitionDetection *TranslateProofReadGet200ResponseRepetitionDetection `json:"repetition_detection,omitempty"`
	// ISO code of the language used for explanations and analysis
	ExplanationLanguage *string `json:"explanation_language,omitempty"`
}

// NewTranslateProofReadGet200Response instantiates a new TranslateProofReadGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateProofReadGet200Response() *TranslateProofReadGet200Response {
	this := TranslateProofReadGet200Response{}
	return &this
}

// NewTranslateProofReadGet200ResponseWithDefaults instantiates a new TranslateProofReadGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateProofReadGet200ResponseWithDefaults() *TranslateProofReadGet200Response {
	this := TranslateProofReadGet200Response{}
	return &this
}

// GetCorrectedText returns the CorrectedText field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetCorrectedText() string {
	if o == nil || IsNil(o.CorrectedText) {
		var ret string
		return ret
	}
	return *o.CorrectedText
}

// GetCorrectedTextOk returns a tuple with the CorrectedText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetCorrectedTextOk() (*string, bool) {
	if o == nil || IsNil(o.CorrectedText) {
		return nil, false
	}
	return o.CorrectedText, true
}

// HasCorrectedText returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasCorrectedText() bool {
	if o != nil && !IsNil(o.CorrectedText) {
		return true
	}

	return false
}

// SetCorrectedText gets a reference to the given string and assigns it to the CorrectedText field.
func (o *TranslateProofReadGet200Response) SetCorrectedText(v string) {
	o.CorrectedText = &v
}

// GetDetectedLanguage returns the DetectedLanguage field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetDetectedLanguage() TranslateProofReadGet200ResponseDetectedLanguage {
	if o == nil || IsNil(o.DetectedLanguage) {
		var ret TranslateProofReadGet200ResponseDetectedLanguage
		return ret
	}
	return *o.DetectedLanguage
}

// GetDetectedLanguageOk returns a tuple with the DetectedLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetDetectedLanguageOk() (*TranslateProofReadGet200ResponseDetectedLanguage, bool) {
	if o == nil || IsNil(o.DetectedLanguage) {
		return nil, false
	}
	return o.DetectedLanguage, true
}

// HasDetectedLanguage returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasDetectedLanguage() bool {
	if o != nil && !IsNil(o.DetectedLanguage) {
		return true
	}

	return false
}

// SetDetectedLanguage gets a reference to the given TranslateProofReadGet200ResponseDetectedLanguage and assigns it to the DetectedLanguage field.
func (o *TranslateProofReadGet200Response) SetDetectedLanguage(v TranslateProofReadGet200ResponseDetectedLanguage) {
	o.DetectedLanguage = &v
}

// GetChanges returns the Changes field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetChanges() []TranslateProofReadGet200ResponseChangesInner {
	if o == nil || IsNil(o.Changes) {
		var ret []TranslateProofReadGet200ResponseChangesInner
		return ret
	}
	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetChangesOk() ([]TranslateProofReadGet200ResponseChangesInner, bool) {
	if o == nil || IsNil(o.Changes) {
		return nil, false
	}
	return o.Changes, true
}

// HasChanges returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasChanges() bool {
	if o != nil && !IsNil(o.Changes) {
		return true
	}

	return false
}

// SetChanges gets a reference to the given []TranslateProofReadGet200ResponseChangesInner and assigns it to the Changes field.
func (o *TranslateProofReadGet200Response) SetChanges(v []TranslateProofReadGet200ResponseChangesInner) {
	o.Changes = v
}

// GetCorrectionsSummary returns the CorrectionsSummary field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetCorrectionsSummary() string {
	if o == nil || IsNil(o.CorrectionsSummary) {
		var ret string
		return ret
	}
	return *o.CorrectionsSummary
}

// GetCorrectionsSummaryOk returns a tuple with the CorrectionsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetCorrectionsSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.CorrectionsSummary) {
		return nil, false
	}
	return o.CorrectionsSummary, true
}

// HasCorrectionsSummary returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasCorrectionsSummary() bool {
	if o != nil && !IsNil(o.CorrectionsSummary) {
		return true
	}

	return false
}

// SetCorrectionsSummary gets a reference to the given string and assigns it to the CorrectionsSummary field.
func (o *TranslateProofReadGet200Response) SetCorrectionsSummary(v string) {
	o.CorrectionsSummary = &v
}

// GetToneAnalysis returns the ToneAnalysis field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetToneAnalysis() TranslateProofReadGet200ResponseToneAnalysis {
	if o == nil || IsNil(o.ToneAnalysis) {
		var ret TranslateProofReadGet200ResponseToneAnalysis
		return ret
	}
	return *o.ToneAnalysis
}

// GetToneAnalysisOk returns a tuple with the ToneAnalysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetToneAnalysisOk() (*TranslateProofReadGet200ResponseToneAnalysis, bool) {
	if o == nil || IsNil(o.ToneAnalysis) {
		return nil, false
	}
	return o.ToneAnalysis, true
}

// HasToneAnalysis returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasToneAnalysis() bool {
	if o != nil && !IsNil(o.ToneAnalysis) {
		return true
	}

	return false
}

// SetToneAnalysis gets a reference to the given TranslateProofReadGet200ResponseToneAnalysis and assigns it to the ToneAnalysis field.
func (o *TranslateProofReadGet200Response) SetToneAnalysis(v TranslateProofReadGet200ResponseToneAnalysis) {
	o.ToneAnalysis = &v
}

// GetVoiceConsistency returns the VoiceConsistency field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetVoiceConsistency() TranslateProofReadGet200ResponseVoiceConsistency {
	if o == nil || IsNil(o.VoiceConsistency) {
		var ret TranslateProofReadGet200ResponseVoiceConsistency
		return ret
	}
	return *o.VoiceConsistency
}

// GetVoiceConsistencyOk returns a tuple with the VoiceConsistency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetVoiceConsistencyOk() (*TranslateProofReadGet200ResponseVoiceConsistency, bool) {
	if o == nil || IsNil(o.VoiceConsistency) {
		return nil, false
	}
	return o.VoiceConsistency, true
}

// HasVoiceConsistency returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasVoiceConsistency() bool {
	if o != nil && !IsNil(o.VoiceConsistency) {
		return true
	}

	return false
}

// SetVoiceConsistency gets a reference to the given TranslateProofReadGet200ResponseVoiceConsistency and assigns it to the VoiceConsistency field.
func (o *TranslateProofReadGet200Response) SetVoiceConsistency(v TranslateProofReadGet200ResponseVoiceConsistency) {
	o.VoiceConsistency = &v
}

// GetRepetitionDetection returns the RepetitionDetection field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetRepetitionDetection() TranslateProofReadGet200ResponseRepetitionDetection {
	if o == nil || IsNil(o.RepetitionDetection) {
		var ret TranslateProofReadGet200ResponseRepetitionDetection
		return ret
	}
	return *o.RepetitionDetection
}

// GetRepetitionDetectionOk returns a tuple with the RepetitionDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetRepetitionDetectionOk() (*TranslateProofReadGet200ResponseRepetitionDetection, bool) {
	if o == nil || IsNil(o.RepetitionDetection) {
		return nil, false
	}
	return o.RepetitionDetection, true
}

// HasRepetitionDetection returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasRepetitionDetection() bool {
	if o != nil && !IsNil(o.RepetitionDetection) {
		return true
	}

	return false
}

// SetRepetitionDetection gets a reference to the given TranslateProofReadGet200ResponseRepetitionDetection and assigns it to the RepetitionDetection field.
func (o *TranslateProofReadGet200Response) SetRepetitionDetection(v TranslateProofReadGet200ResponseRepetitionDetection) {
	o.RepetitionDetection = &v
}

// GetExplanationLanguage returns the ExplanationLanguage field value if set, zero value otherwise.
func (o *TranslateProofReadGet200Response) GetExplanationLanguage() string {
	if o == nil || IsNil(o.ExplanationLanguage) {
		var ret string
		return ret
	}
	return *o.ExplanationLanguage
}

// GetExplanationLanguageOk returns a tuple with the ExplanationLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200Response) GetExplanationLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.ExplanationLanguage) {
		return nil, false
	}
	return o.ExplanationLanguage, true
}

// HasExplanationLanguage returns a boolean if a field has been set.
func (o *TranslateProofReadGet200Response) HasExplanationLanguage() bool {
	if o != nil && !IsNil(o.ExplanationLanguage) {
		return true
	}

	return false
}

// SetExplanationLanguage gets a reference to the given string and assigns it to the ExplanationLanguage field.
func (o *TranslateProofReadGet200Response) SetExplanationLanguage(v string) {
	o.ExplanationLanguage = &v
}

func (o TranslateProofReadGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateProofReadGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorrectedText) {
		toSerialize["corrected_text"] = o.CorrectedText
	}
	if !IsNil(o.DetectedLanguage) {
		toSerialize["detected_language"] = o.DetectedLanguage
	}
	if !IsNil(o.Changes) {
		toSerialize["changes"] = o.Changes
	}
	if !IsNil(o.CorrectionsSummary) {
		toSerialize["corrections_summary"] = o.CorrectionsSummary
	}
	if !IsNil(o.ToneAnalysis) {
		toSerialize["tone_analysis"] = o.ToneAnalysis
	}
	if !IsNil(o.VoiceConsistency) {
		toSerialize["voice_consistency"] = o.VoiceConsistency
	}
	if !IsNil(o.RepetitionDetection) {
		toSerialize["repetition_detection"] = o.RepetitionDetection
	}
	if !IsNil(o.ExplanationLanguage) {
		toSerialize["explanation_language"] = o.ExplanationLanguage
	}
	return toSerialize, nil
}

type NullableTranslateProofReadGet200Response struct {
	value *TranslateProofReadGet200Response
	isSet bool
}

func (v NullableTranslateProofReadGet200Response) Get() *TranslateProofReadGet200Response {
	return v.value
}

func (v *NullableTranslateProofReadGet200Response) Set(val *TranslateProofReadGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateProofReadGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateProofReadGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateProofReadGet200Response(val *TranslateProofReadGet200Response) *NullableTranslateProofReadGet200Response {
	return &NullableTranslateProofReadGet200Response{value: val, isSet: true}
}

func (v NullableTranslateProofReadGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateProofReadGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


