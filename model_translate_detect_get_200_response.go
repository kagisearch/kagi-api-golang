/*
Kagi API

The search API provides programmatic access to data that powers our search results & more. Kagi APIs  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  Quick start for all APIs:  - Get the API key (requires a Kagi account). - Top off your API credits. - Call the API.  ### Free  - Kagi Small Web RSS feed (public)  ### Unofficial Client Libraries  Libraries created by Kagi users and third parties.  - kagigo for Go - FastGPT & Universal Summarizer - kagi-api for Rust - kagi-dotnet for C#/.NET  ### Beta Status  The API is currently in a \"v0\" beta status. Changes will be ongoing, and will be added to the documentation below as features become available.  Use at your own risk, but please reach out to us if you have any questions.  See the Support and Community section for details. ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - Bug Reports - Q&A Forum - API Feature Requests  ### Discord Join our Discord! Good for quick questions, chatting about thing you've made with our APIs! 

API version: 0.0.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateDetectGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateDetectGet200Response{}

// TranslateDetectGet200Response struct for TranslateDetectGet200Response
type TranslateDetectGet200Response struct {
	// ISO code of detected language
	Iso *string `json:"iso,omitempty"`
	// Human-readable language name
	Label *string `json:"label,omitempty"`
}

// NewTranslateDetectGet200Response instantiates a new TranslateDetectGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateDetectGet200Response() *TranslateDetectGet200Response {
	this := TranslateDetectGet200Response{}
	return &this
}

// NewTranslateDetectGet200ResponseWithDefaults instantiates a new TranslateDetectGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateDetectGet200ResponseWithDefaults() *TranslateDetectGet200Response {
	this := TranslateDetectGet200Response{}
	return &this
}

// GetIso returns the Iso field value if set, zero value otherwise.
func (o *TranslateDetectGet200Response) GetIso() string {
	if o == nil || IsNil(o.Iso) {
		var ret string
		return ret
	}
	return *o.Iso
}

// GetIsoOk returns a tuple with the Iso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateDetectGet200Response) GetIsoOk() (*string, bool) {
	if o == nil || IsNil(o.Iso) {
		return nil, false
	}
	return o.Iso, true
}

// HasIso returns a boolean if a field has been set.
func (o *TranslateDetectGet200Response) HasIso() bool {
	if o != nil && !IsNil(o.Iso) {
		return true
	}

	return false
}

// SetIso gets a reference to the given string and assigns it to the Iso field.
func (o *TranslateDetectGet200Response) SetIso(v string) {
	o.Iso = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *TranslateDetectGet200Response) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateDetectGet200Response) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *TranslateDetectGet200Response) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *TranslateDetectGet200Response) SetLabel(v string) {
	o.Label = &v
}

func (o TranslateDetectGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateDetectGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Iso) {
		toSerialize["iso"] = o.Iso
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableTranslateDetectGet200Response struct {
	value *TranslateDetectGet200Response
	isSet bool
}

func (v NullableTranslateDetectGet200Response) Get() *TranslateDetectGet200Response {
	return v.value
}

func (v *NullableTranslateDetectGet200Response) Set(val *TranslateDetectGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateDetectGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateDetectGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateDetectGet200Response(val *TranslateDetectGet200Response) *NullableTranslateDetectGet200Response {
	return &NullableTranslateDetectGet200Response{value: val, isSet: true}
}

func (v NullableTranslateDetectGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateDetectGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


