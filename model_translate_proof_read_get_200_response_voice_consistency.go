/*
Kagi API

The search API provides programmatic access to data that powers our search results & more. Kagi APIs  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  Quick start for all APIs:  - Get the API key (requires a Kagi account). - Top off your API credits. - Call the API.  ### Free  - Kagi Small Web RSS feed (public)  ### Unofficial Client Libraries  Libraries created by Kagi users and third parties.  - kagigo for Go - FastGPT & Universal Summarizer - kagi-api for Rust - kagi-dotnet for C#/.NET  ### Beta Status  The API is currently in a \"v0\" beta status. Changes will be ongoing, and will be added to the documentation below as features become available.  Use at your own risk, but please reach out to us if you have any questions.  See the Support and Community section for details. ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - Bug Reports - Q&A Forum - API Feature Requests  ### Discord Join our Discord! Good for quick questions, chatting about thing you've made with our APIs! 

API version: 0.0.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateProofReadGet200ResponseVoiceConsistency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateProofReadGet200ResponseVoiceConsistency{}

// TranslateProofReadGet200ResponseVoiceConsistency Analysis of active vs. passive voice usage
type TranslateProofReadGet200ResponseVoiceConsistency struct {
	// Approximate percentage of sentences using active voice
	ActiveVoicePercentage *float32 `json:"active_voice_percentage,omitempty"`
	// Approximate percentage of sentences using passive voice
	PassiveVoicePercentage *float32 `json:"passive_voice_percentage,omitempty"`
	// Whether the voice usage is consistent throughout
	IsConsistent *bool `json:"is_consistent,omitempty"`
	// Optional suggestion about voice usage
	Suggestion NullableString `json:"suggestion,omitempty"`
	PassiveInstances []TranslateProofReadGet200ResponseVoiceConsistencyPassiveInstancesInner `json:"passive_instances,omitempty"`
	// Overall assessment of voice usage and its effectiveness
	Summary *string `json:"summary,omitempty"`
}

// NewTranslateProofReadGet200ResponseVoiceConsistency instantiates a new TranslateProofReadGet200ResponseVoiceConsistency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateProofReadGet200ResponseVoiceConsistency() *TranslateProofReadGet200ResponseVoiceConsistency {
	this := TranslateProofReadGet200ResponseVoiceConsistency{}
	return &this
}

// NewTranslateProofReadGet200ResponseVoiceConsistencyWithDefaults instantiates a new TranslateProofReadGet200ResponseVoiceConsistency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateProofReadGet200ResponseVoiceConsistencyWithDefaults() *TranslateProofReadGet200ResponseVoiceConsistency {
	this := TranslateProofReadGet200ResponseVoiceConsistency{}
	return &this
}

// GetActiveVoicePercentage returns the ActiveVoicePercentage field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetActiveVoicePercentage() float32 {
	if o == nil || IsNil(o.ActiveVoicePercentage) {
		var ret float32
		return ret
	}
	return *o.ActiveVoicePercentage
}

// GetActiveVoicePercentageOk returns a tuple with the ActiveVoicePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetActiveVoicePercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.ActiveVoicePercentage) {
		return nil, false
	}
	return o.ActiveVoicePercentage, true
}

// HasActiveVoicePercentage returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) HasActiveVoicePercentage() bool {
	if o != nil && !IsNil(o.ActiveVoicePercentage) {
		return true
	}

	return false
}

// SetActiveVoicePercentage gets a reference to the given float32 and assigns it to the ActiveVoicePercentage field.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetActiveVoicePercentage(v float32) {
	o.ActiveVoicePercentage = &v
}

// GetPassiveVoicePercentage returns the PassiveVoicePercentage field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetPassiveVoicePercentage() float32 {
	if o == nil || IsNil(o.PassiveVoicePercentage) {
		var ret float32
		return ret
	}
	return *o.PassiveVoicePercentage
}

// GetPassiveVoicePercentageOk returns a tuple with the PassiveVoicePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetPassiveVoicePercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.PassiveVoicePercentage) {
		return nil, false
	}
	return o.PassiveVoicePercentage, true
}

// HasPassiveVoicePercentage returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) HasPassiveVoicePercentage() bool {
	if o != nil && !IsNil(o.PassiveVoicePercentage) {
		return true
	}

	return false
}

// SetPassiveVoicePercentage gets a reference to the given float32 and assigns it to the PassiveVoicePercentage field.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetPassiveVoicePercentage(v float32) {
	o.PassiveVoicePercentage = &v
}

// GetIsConsistent returns the IsConsistent field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetIsConsistent() bool {
	if o == nil || IsNil(o.IsConsistent) {
		var ret bool
		return ret
	}
	return *o.IsConsistent
}

// GetIsConsistentOk returns a tuple with the IsConsistent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetIsConsistentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConsistent) {
		return nil, false
	}
	return o.IsConsistent, true
}

// HasIsConsistent returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) HasIsConsistent() bool {
	if o != nil && !IsNil(o.IsConsistent) {
		return true
	}

	return false
}

// SetIsConsistent gets a reference to the given bool and assigns it to the IsConsistent field.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetIsConsistent(v bool) {
	o.IsConsistent = &v
}

// GetSuggestion returns the Suggestion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetSuggestion() string {
	if o == nil || IsNil(o.Suggestion.Get()) {
		var ret string
		return ret
	}
	return *o.Suggestion.Get()
}

// GetSuggestionOk returns a tuple with the Suggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetSuggestionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suggestion.Get(), o.Suggestion.IsSet()
}

// HasSuggestion returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) HasSuggestion() bool {
	if o != nil && o.Suggestion.IsSet() {
		return true
	}

	return false
}

// SetSuggestion gets a reference to the given NullableString and assigns it to the Suggestion field.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetSuggestion(v string) {
	o.Suggestion.Set(&v)
}
// SetSuggestionNil sets the value for Suggestion to be an explicit nil
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetSuggestionNil() {
	o.Suggestion.Set(nil)
}

// UnsetSuggestion ensures that no value is present for Suggestion, not even an explicit nil
func (o *TranslateProofReadGet200ResponseVoiceConsistency) UnsetSuggestion() {
	o.Suggestion.Unset()
}

// GetPassiveInstances returns the PassiveInstances field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetPassiveInstances() []TranslateProofReadGet200ResponseVoiceConsistencyPassiveInstancesInner {
	if o == nil || IsNil(o.PassiveInstances) {
		var ret []TranslateProofReadGet200ResponseVoiceConsistencyPassiveInstancesInner
		return ret
	}
	return o.PassiveInstances
}

// GetPassiveInstancesOk returns a tuple with the PassiveInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetPassiveInstancesOk() ([]TranslateProofReadGet200ResponseVoiceConsistencyPassiveInstancesInner, bool) {
	if o == nil || IsNil(o.PassiveInstances) {
		return nil, false
	}
	return o.PassiveInstances, true
}

// HasPassiveInstances returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) HasPassiveInstances() bool {
	if o != nil && !IsNil(o.PassiveInstances) {
		return true
	}

	return false
}

// SetPassiveInstances gets a reference to the given []TranslateProofReadGet200ResponseVoiceConsistencyPassiveInstancesInner and assigns it to the PassiveInstances field.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetPassiveInstances(v []TranslateProofReadGet200ResponseVoiceConsistencyPassiveInstancesInner) {
	o.PassiveInstances = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *TranslateProofReadGet200ResponseVoiceConsistency) SetSummary(v string) {
	o.Summary = &v
}

func (o TranslateProofReadGet200ResponseVoiceConsistency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateProofReadGet200ResponseVoiceConsistency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveVoicePercentage) {
		toSerialize["active_voice_percentage"] = o.ActiveVoicePercentage
	}
	if !IsNil(o.PassiveVoicePercentage) {
		toSerialize["passive_voice_percentage"] = o.PassiveVoicePercentage
	}
	if !IsNil(o.IsConsistent) {
		toSerialize["is_consistent"] = o.IsConsistent
	}
	if o.Suggestion.IsSet() {
		toSerialize["suggestion"] = o.Suggestion.Get()
	}
	if !IsNil(o.PassiveInstances) {
		toSerialize["passive_instances"] = o.PassiveInstances
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	return toSerialize, nil
}

type NullableTranslateProofReadGet200ResponseVoiceConsistency struct {
	value *TranslateProofReadGet200ResponseVoiceConsistency
	isSet bool
}

func (v NullableTranslateProofReadGet200ResponseVoiceConsistency) Get() *TranslateProofReadGet200ResponseVoiceConsistency {
	return v.value
}

func (v *NullableTranslateProofReadGet200ResponseVoiceConsistency) Set(val *TranslateProofReadGet200ResponseVoiceConsistency) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateProofReadGet200ResponseVoiceConsistency) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateProofReadGet200ResponseVoiceConsistency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateProofReadGet200ResponseVoiceConsistency(val *TranslateProofReadGet200ResponseVoiceConsistency) *NullableTranslateProofReadGet200ResponseVoiceConsistency {
	return &NullableTranslateProofReadGet200ResponseVoiceConsistency{value: val, isSet: true}
}

func (v NullableTranslateProofReadGet200ResponseVoiceConsistency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateProofReadGet200ResponseVoiceConsistency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


