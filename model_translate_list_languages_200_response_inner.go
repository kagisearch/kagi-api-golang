/*
Kagi API

The Kagi API provides programmatic access to data that powers our search results & more.   Quick start for all APIs:  - Create an account at [Kagi](https://kagi.com/signup) - Generate an [API key](https://kagi.com/settings?p=api) - Call the API  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  ### Free  - Kagi Small Web RSS feed (public)  ### Official Client Libraries  We offer the following libraries you can use to interact with the Kagi API. These are generated from an OpenAPI spec. If you have a language you would like to use and it's not in the list, send us a message and we will add it to the list if it is supported. Or you can use the [spec](https://wild-wombat.redocly.app/_spec/openapi.yaml?download) to build your own custom library.  - [Golang](https://github.com/kagisearch/kagi-api-golang) - [Python](https://github.com/kagisearch/kagi-api-python)  ### Unofficial Client Libraries  There also exist third party libraries for interacting with the Kagi API.  - [kagigo for Go](https://github.com/httpjamesm/kagigo) - FastGPT & Universal Summarizer - [kagi-api](https://crates.io/crates/kagi-api) for Rust - [kagi-api](https://alchemists.io/projects/kagi-api) for Ruby - [kagi-dotnet](https://github.com/patchoulish/kagi-dotnet) for C#/.NET  ### API Status  Our existing API, the \"v0\" beta API, is being replaced with a new version that will be available publicly soon. As changes are made, we will be updating the documentation below when the new features become available.  See the [Support and Community](https://help.kagi.com/kagi/support-and-community/) section for details. ### Pricing  We are in the process of moving all APIs to a post-paid tiered system, where each tier has a limit on the number of requests that can be made. If an API has a pricing section, then it is still being migrated over to the new billing system.  ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - [Bug Reports](https://github.com/kagisearch/kagi-docs/issues/new/choose) - [Q&A Forum](https://github.com/kagisearch/kagi-docs/discussions/categories/q-a?discussions_q=category%3AQ%26A+label%3Aproduct%3Akagi_search_api) - [API Feature Requests](https://github.com/kagisearch/kagi-docs/discussions/categories/kagi-search-api-feature-requests-ideas)  ### Discord Join our [Discord](https://kagi.com/discord)! Good for quick questions or chatting about things you've made with our APIs! 

API version: 0.1.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateListLanguages200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateListLanguages200ResponseInner{}

// TranslateListLanguages200ResponseInner struct for TranslateListLanguages200ResponseInner
type TranslateListLanguages200ResponseInner struct {
	// Language code
	Language *string `json:"language,omitempty"`
	// Language name
	Name *string `json:"name,omitempty"`
	// Whether formality is supported for this language
	SupportsFormality *bool `json:"supports_formality,omitempty"`
}

// NewTranslateListLanguages200ResponseInner instantiates a new TranslateListLanguages200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateListLanguages200ResponseInner() *TranslateListLanguages200ResponseInner {
	this := TranslateListLanguages200ResponseInner{}
	return &this
}

// NewTranslateListLanguages200ResponseInnerWithDefaults instantiates a new TranslateListLanguages200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateListLanguages200ResponseInnerWithDefaults() *TranslateListLanguages200ResponseInner {
	this := TranslateListLanguages200ResponseInner{}
	return &this
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *TranslateListLanguages200ResponseInner) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateListLanguages200ResponseInner) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *TranslateListLanguages200ResponseInner) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *TranslateListLanguages200ResponseInner) SetLanguage(v string) {
	o.Language = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TranslateListLanguages200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateListLanguages200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TranslateListLanguages200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TranslateListLanguages200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetSupportsFormality returns the SupportsFormality field value if set, zero value otherwise.
func (o *TranslateListLanguages200ResponseInner) GetSupportsFormality() bool {
	if o == nil || IsNil(o.SupportsFormality) {
		var ret bool
		return ret
	}
	return *o.SupportsFormality
}

// GetSupportsFormalityOk returns a tuple with the SupportsFormality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateListLanguages200ResponseInner) GetSupportsFormalityOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsFormality) {
		return nil, false
	}
	return o.SupportsFormality, true
}

// HasSupportsFormality returns a boolean if a field has been set.
func (o *TranslateListLanguages200ResponseInner) HasSupportsFormality() bool {
	if o != nil && !IsNil(o.SupportsFormality) {
		return true
	}

	return false
}

// SetSupportsFormality gets a reference to the given bool and assigns it to the SupportsFormality field.
func (o *TranslateListLanguages200ResponseInner) SetSupportsFormality(v bool) {
	o.SupportsFormality = &v
}

func (o TranslateListLanguages200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateListLanguages200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SupportsFormality) {
		toSerialize["supports_formality"] = o.SupportsFormality
	}
	return toSerialize, nil
}

type NullableTranslateListLanguages200ResponseInner struct {
	value *TranslateListLanguages200ResponseInner
	isSet bool
}

func (v NullableTranslateListLanguages200ResponseInner) Get() *TranslateListLanguages200ResponseInner {
	return v.value
}

func (v *NullableTranslateListLanguages200ResponseInner) Set(val *TranslateListLanguages200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateListLanguages200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateListLanguages200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateListLanguages200ResponseInner(val *TranslateListLanguages200ResponseInner) *NullableTranslateListLanguages200ResponseInner {
	return &NullableTranslateListLanguages200ResponseInner{value: val, isSet: true}
}

func (v NullableTranslateListLanguages200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateListLanguages200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


