/*
Kagi API

The search API provides programmatic access to data that powers our search results & more. Kagi APIs  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  Quick start for all APIs:  - Get the API key (requires a Kagi account). - Top off your API credits. - Call the API.  ### Free  - Kagi Small Web RSS feed (public)  ### Unofficial Client Libraries  Libraries created by Kagi users and third parties.  - kagigo for Go - FastGPT & Universal Summarizer - kagi-api for Rust - kagi-dotnet for C#/.NET  ### Beta Status  The API is currently in a \"v0\" beta status. Changes will be ongoing, and will be added to the documentation below as features become available.  Use at your own risk, but please reach out to us if you have any questions.  See the Support and Community section for details. ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - Bug Reports - Q&A Forum - API Feature Requests  ### Discord Join our Discord! Good for quick questions, chatting about thing you've made with our APIs! 

API version: 0.0.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateProofReadGet200ResponseChangesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateProofReadGet200ResponseChangesInner{}

// TranslateProofReadGet200ResponseChangesInner struct for TranslateProofReadGet200ResponseChangesInner
type TranslateProofReadGet200ResponseChangesInner struct {
	// Original text segment with the error
	Original *string `json:"original,omitempty"`
	// Corrected text segment
	Correction *string `json:"correction,omitempty"`
	// Brief explanation of why this change was necessary
	Explanation *string `json:"explanation,omitempty"`
	// Array of correction types/reasons that explain why the change was necessary (e.g., grammar, spelling, punctuation, word_choice, style, typography, formatting, clarity, etc.)
	Types []string `json:"types,omitempty"`
	// Importance of this correction
	Severity *string `json:"severity,omitempty"`
}

// NewTranslateProofReadGet200ResponseChangesInner instantiates a new TranslateProofReadGet200ResponseChangesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateProofReadGet200ResponseChangesInner() *TranslateProofReadGet200ResponseChangesInner {
	this := TranslateProofReadGet200ResponseChangesInner{}
	return &this
}

// NewTranslateProofReadGet200ResponseChangesInnerWithDefaults instantiates a new TranslateProofReadGet200ResponseChangesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateProofReadGet200ResponseChangesInnerWithDefaults() *TranslateProofReadGet200ResponseChangesInner {
	this := TranslateProofReadGet200ResponseChangesInner{}
	return &this
}

// GetOriginal returns the Original field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseChangesInner) GetOriginal() string {
	if o == nil || IsNil(o.Original) {
		var ret string
		return ret
	}
	return *o.Original
}

// GetOriginalOk returns a tuple with the Original field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) GetOriginalOk() (*string, bool) {
	if o == nil || IsNil(o.Original) {
		return nil, false
	}
	return o.Original, true
}

// HasOriginal returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) HasOriginal() bool {
	if o != nil && !IsNil(o.Original) {
		return true
	}

	return false
}

// SetOriginal gets a reference to the given string and assigns it to the Original field.
func (o *TranslateProofReadGet200ResponseChangesInner) SetOriginal(v string) {
	o.Original = &v
}

// GetCorrection returns the Correction field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseChangesInner) GetCorrection() string {
	if o == nil || IsNil(o.Correction) {
		var ret string
		return ret
	}
	return *o.Correction
}

// GetCorrectionOk returns a tuple with the Correction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) GetCorrectionOk() (*string, bool) {
	if o == nil || IsNil(o.Correction) {
		return nil, false
	}
	return o.Correction, true
}

// HasCorrection returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) HasCorrection() bool {
	if o != nil && !IsNil(o.Correction) {
		return true
	}

	return false
}

// SetCorrection gets a reference to the given string and assigns it to the Correction field.
func (o *TranslateProofReadGet200ResponseChangesInner) SetCorrection(v string) {
	o.Correction = &v
}

// GetExplanation returns the Explanation field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseChangesInner) GetExplanation() string {
	if o == nil || IsNil(o.Explanation) {
		var ret string
		return ret
	}
	return *o.Explanation
}

// GetExplanationOk returns a tuple with the Explanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) GetExplanationOk() (*string, bool) {
	if o == nil || IsNil(o.Explanation) {
		return nil, false
	}
	return o.Explanation, true
}

// HasExplanation returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) HasExplanation() bool {
	if o != nil && !IsNil(o.Explanation) {
		return true
	}

	return false
}

// SetExplanation gets a reference to the given string and assigns it to the Explanation field.
func (o *TranslateProofReadGet200ResponseChangesInner) SetExplanation(v string) {
	o.Explanation = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseChangesInner) GetTypes() []string {
	if o == nil || IsNil(o.Types) {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *TranslateProofReadGet200ResponseChangesInner) SetTypes(v []string) {
	o.Types = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *TranslateProofReadGet200ResponseChangesInner) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *TranslateProofReadGet200ResponseChangesInner) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *TranslateProofReadGet200ResponseChangesInner) SetSeverity(v string) {
	o.Severity = &v
}

func (o TranslateProofReadGet200ResponseChangesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateProofReadGet200ResponseChangesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Original) {
		toSerialize["original"] = o.Original
	}
	if !IsNil(o.Correction) {
		toSerialize["correction"] = o.Correction
	}
	if !IsNil(o.Explanation) {
		toSerialize["explanation"] = o.Explanation
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullableTranslateProofReadGet200ResponseChangesInner struct {
	value *TranslateProofReadGet200ResponseChangesInner
	isSet bool
}

func (v NullableTranslateProofReadGet200ResponseChangesInner) Get() *TranslateProofReadGet200ResponseChangesInner {
	return v.value
}

func (v *NullableTranslateProofReadGet200ResponseChangesInner) Set(val *TranslateProofReadGet200ResponseChangesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateProofReadGet200ResponseChangesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateProofReadGet200ResponseChangesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateProofReadGet200ResponseChangesInner(val *TranslateProofReadGet200ResponseChangesInner) *NullableTranslateProofReadGet200ResponseChangesInner {
	return &NullableTranslateProofReadGet200ResponseChangesInner{value: val, isSet: true}
}

func (v NullableTranslateProofReadGet200ResponseChangesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateProofReadGet200ResponseChangesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


