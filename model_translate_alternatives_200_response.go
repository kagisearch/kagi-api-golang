/*
Kagi API

The search API provides programmatic access to data that powers our search results & more. Kagi APIs  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  Quick start for all APIs:  - Get the API key (requires a Kagi account). - Top off your API credits. - Call the API.  ### Free  - Kagi Small Web RSS feed (public)  ### Unofficial Client Libraries  Libraries created by Kagi users and third parties.  - kagigo for Go - FastGPT & Universal Summarizer - kagi-api for Rust - kagi-dotnet for C#/.NET  ### Beta Status  The API is currently in a \"v0\" beta status. Changes will be ongoing, and will be added to the documentation below as features become available.  Use at your own risk, but please reach out to us if you have any questions.  See the Support and Community section for details. ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - Bug Reports - Q&A Forum - API Feature Requests  ### Discord Join our Discord! Good for quick questions, chatting about thing you've made with our APIs! 

API version: 0.0.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateAlternatives200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateAlternatives200Response{}

// TranslateAlternatives200Response struct for TranslateAlternatives200Response
type TranslateAlternatives200Response struct {
	// A short description of the style, formality, or key characteristics of the text
	OriginalDescription *string `json:"originalDescription,omitempty"`
	Elements []TranslateAlternatives200ResponseElementsInner `json:"elements,omitempty"`
}

// NewTranslateAlternatives200Response instantiates a new TranslateAlternatives200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateAlternatives200Response() *TranslateAlternatives200Response {
	this := TranslateAlternatives200Response{}
	return &this
}

// NewTranslateAlternatives200ResponseWithDefaults instantiates a new TranslateAlternatives200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateAlternatives200ResponseWithDefaults() *TranslateAlternatives200Response {
	this := TranslateAlternatives200Response{}
	return &this
}

// GetOriginalDescription returns the OriginalDescription field value if set, zero value otherwise.
func (o *TranslateAlternatives200Response) GetOriginalDescription() string {
	if o == nil || IsNil(o.OriginalDescription) {
		var ret string
		return ret
	}
	return *o.OriginalDescription
}

// GetOriginalDescriptionOk returns a tuple with the OriginalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateAlternatives200Response) GetOriginalDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalDescription) {
		return nil, false
	}
	return o.OriginalDescription, true
}

// HasOriginalDescription returns a boolean if a field has been set.
func (o *TranslateAlternatives200Response) HasOriginalDescription() bool {
	if o != nil && !IsNil(o.OriginalDescription) {
		return true
	}

	return false
}

// SetOriginalDescription gets a reference to the given string and assigns it to the OriginalDescription field.
func (o *TranslateAlternatives200Response) SetOriginalDescription(v string) {
	o.OriginalDescription = &v
}

// GetElements returns the Elements field value if set, zero value otherwise.
func (o *TranslateAlternatives200Response) GetElements() []TranslateAlternatives200ResponseElementsInner {
	if o == nil || IsNil(o.Elements) {
		var ret []TranslateAlternatives200ResponseElementsInner
		return ret
	}
	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateAlternatives200Response) GetElementsOk() ([]TranslateAlternatives200ResponseElementsInner, bool) {
	if o == nil || IsNil(o.Elements) {
		return nil, false
	}
	return o.Elements, true
}

// HasElements returns a boolean if a field has been set.
func (o *TranslateAlternatives200Response) HasElements() bool {
	if o != nil && !IsNil(o.Elements) {
		return true
	}

	return false
}

// SetElements gets a reference to the given []TranslateAlternatives200ResponseElementsInner and assigns it to the Elements field.
func (o *TranslateAlternatives200Response) SetElements(v []TranslateAlternatives200ResponseElementsInner) {
	o.Elements = v
}

func (o TranslateAlternatives200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateAlternatives200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OriginalDescription) {
		toSerialize["originalDescription"] = o.OriginalDescription
	}
	if !IsNil(o.Elements) {
		toSerialize["elements"] = o.Elements
	}
	return toSerialize, nil
}

type NullableTranslateAlternatives200Response struct {
	value *TranslateAlternatives200Response
	isSet bool
}

func (v NullableTranslateAlternatives200Response) Get() *TranslateAlternatives200Response {
	return v.value
}

func (v *NullableTranslateAlternatives200Response) Set(val *TranslateAlternatives200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateAlternatives200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateAlternatives200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateAlternatives200Response(val *TranslateAlternatives200Response) *NullableTranslateAlternatives200Response {
	return &NullableTranslateAlternatives200Response{value: val, isSet: true}
}

func (v NullableTranslateAlternatives200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateAlternatives200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


