/*
Kagi API

The Kagi API provides programmatic access to data that powers our search results & more.   Quick start for all APIs:  - Create an account at [Kagi](https://kagi.com/signup) - Generate an [API key](https://kagi.com/settings?p=api) - Call the API  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  ### Free  - Kagi Small Web RSS feed (public)  ### Official Client Libraries  We offer the following libraries you can use to interact with the Kagi API. These are generated from an OpenAPI spec. If you have a language you would like to use and it's not in the list, send us a message and we will add it to the list if it is supported. Or you can use the [spec](https://wild-wombat.redocly.app/_spec/openapi.yaml?download) to build your own custom library.  - [Golang](https://github.com/kagisearch/kagi-api-golang) - [Python](https://github.com/kagisearch/kagi-api-python)  ### Unofficial Client Libraries  There also exist third party libraries for interacting with the Kagi API.  - [kagigo for Go](https://github.com/httpjamesm/kagigo) - FastGPT & Universal Summarizer - [kagi-api](https://crates.io/crates/kagi-api) for Rust - [kagi-api](https://alchemists.io/projects/kagi-api) for Ruby - [kagi-dotnet](https://github.com/patchoulish/kagi-dotnet) for C#/.NET  ### API Status  Our existing API, the \"v0\" beta API, is being replaced with a new version that will be available publicly soon. As changes are made, we will be updating the documentation below when the new features become available.  See the [Support and Community](https://help.kagi.com/kagi/support-and-community/) section for details. ### Pricing  We are in the process of moving all APIs to a post-paid tiered system, where each tier has a limit on the number of requests that can be made. If an API has a pricing section, then it is still being migrated over to the new billing system.  ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - [Bug Reports](https://github.com/kagisearch/kagi-docs/issues/new/choose) - [Q&A Forum](https://github.com/kagisearch/kagi-docs/discussions/categories/q-a?discussions_q=category%3AQ%26A+label%3Aproduct%3Akagi_search_api) - [API Feature Requests](https://github.com/kagisearch/kagi-docs/discussions/categories/kagi-search-api-feature-requests-ideas)  ### Discord Join our [Discord](https://kagi.com/discord)! Good for quick questions or chatting about things you've made with our APIs! 

API version: 0.1.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Translate200ResponseOneOfDefinitionDefinitionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Translate200ResponseOneOfDefinitionDefinitionsInner{}

// Translate200ResponseOneOfDefinitionDefinitionsInner struct for Translate200ResponseOneOfDefinitionDefinitionsInner
type Translate200ResponseOneOfDefinitionDefinitionsInner struct {
	// Part of speech
	PartOfSpeech *string `json:"partOfSpeech,omitempty"`
	Meanings []Translate200ResponseOneOfDefinitionDefinitionsInnerMeaningsInner `json:"meanings,omitempty"`
}

// NewTranslate200ResponseOneOfDefinitionDefinitionsInner instantiates a new Translate200ResponseOneOfDefinitionDefinitionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslate200ResponseOneOfDefinitionDefinitionsInner() *Translate200ResponseOneOfDefinitionDefinitionsInner {
	this := Translate200ResponseOneOfDefinitionDefinitionsInner{}
	return &this
}

// NewTranslate200ResponseOneOfDefinitionDefinitionsInnerWithDefaults instantiates a new Translate200ResponseOneOfDefinitionDefinitionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslate200ResponseOneOfDefinitionDefinitionsInnerWithDefaults() *Translate200ResponseOneOfDefinitionDefinitionsInner {
	this := Translate200ResponseOneOfDefinitionDefinitionsInner{}
	return &this
}

// GetPartOfSpeech returns the PartOfSpeech field value if set, zero value otherwise.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) GetPartOfSpeech() string {
	if o == nil || IsNil(o.PartOfSpeech) {
		var ret string
		return ret
	}
	return *o.PartOfSpeech
}

// GetPartOfSpeechOk returns a tuple with the PartOfSpeech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) GetPartOfSpeechOk() (*string, bool) {
	if o == nil || IsNil(o.PartOfSpeech) {
		return nil, false
	}
	return o.PartOfSpeech, true
}

// HasPartOfSpeech returns a boolean if a field has been set.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) HasPartOfSpeech() bool {
	if o != nil && !IsNil(o.PartOfSpeech) {
		return true
	}

	return false
}

// SetPartOfSpeech gets a reference to the given string and assigns it to the PartOfSpeech field.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) SetPartOfSpeech(v string) {
	o.PartOfSpeech = &v
}

// GetMeanings returns the Meanings field value if set, zero value otherwise.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) GetMeanings() []Translate200ResponseOneOfDefinitionDefinitionsInnerMeaningsInner {
	if o == nil || IsNil(o.Meanings) {
		var ret []Translate200ResponseOneOfDefinitionDefinitionsInnerMeaningsInner
		return ret
	}
	return o.Meanings
}

// GetMeaningsOk returns a tuple with the Meanings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) GetMeaningsOk() ([]Translate200ResponseOneOfDefinitionDefinitionsInnerMeaningsInner, bool) {
	if o == nil || IsNil(o.Meanings) {
		return nil, false
	}
	return o.Meanings, true
}

// HasMeanings returns a boolean if a field has been set.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) HasMeanings() bool {
	if o != nil && !IsNil(o.Meanings) {
		return true
	}

	return false
}

// SetMeanings gets a reference to the given []Translate200ResponseOneOfDefinitionDefinitionsInnerMeaningsInner and assigns it to the Meanings field.
func (o *Translate200ResponseOneOfDefinitionDefinitionsInner) SetMeanings(v []Translate200ResponseOneOfDefinitionDefinitionsInnerMeaningsInner) {
	o.Meanings = v
}

func (o Translate200ResponseOneOfDefinitionDefinitionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Translate200ResponseOneOfDefinitionDefinitionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PartOfSpeech) {
		toSerialize["partOfSpeech"] = o.PartOfSpeech
	}
	if !IsNil(o.Meanings) {
		toSerialize["meanings"] = o.Meanings
	}
	return toSerialize, nil
}

type NullableTranslate200ResponseOneOfDefinitionDefinitionsInner struct {
	value *Translate200ResponseOneOfDefinitionDefinitionsInner
	isSet bool
}

func (v NullableTranslate200ResponseOneOfDefinitionDefinitionsInner) Get() *Translate200ResponseOneOfDefinitionDefinitionsInner {
	return v.value
}

func (v *NullableTranslate200ResponseOneOfDefinitionDefinitionsInner) Set(val *Translate200ResponseOneOfDefinitionDefinitionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslate200ResponseOneOfDefinitionDefinitionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslate200ResponseOneOfDefinitionDefinitionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslate200ResponseOneOfDefinitionDefinitionsInner(val *Translate200ResponseOneOfDefinitionDefinitionsInner) *NullableTranslate200ResponseOneOfDefinitionDefinitionsInner {
	return &NullableTranslate200ResponseOneOfDefinitionDefinitionsInner{value: val, isSet: true}
}

func (v NullableTranslate200ResponseOneOfDefinitionDefinitionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslate200ResponseOneOfDefinitionDefinitionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


