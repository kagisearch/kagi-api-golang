/*
Kagi API

The search API provides programmatic access to data that powers our search results & more. Kagi APIs  We have the following APIs available. ### Commercial  - Kagi Search API (invite only at the moment) - Web and News Enrichment API (public, exposes Kagi's own indexes Teclis and TinyGem) - Universal Summarizer API (public) - FastGPT API (public)  Quick start for all APIs:  - Get the API key (requires a Kagi account). - Top off your API credits. - Call the API.  ### Free  - Kagi Small Web RSS feed (public)  ### Unofficial Client Libraries  Libraries created by Kagi users and third parties.  - kagigo for Go - FastGPT & Universal Summarizer - kagi-api for Rust - kagi-dotnet for C#/.NET  ### Beta Status  The API is currently in a \"v0\" beta status. Changes will be ongoing, and will be added to the documentation below as features become available.  Use at your own risk, but please reach out to us if you have any questions.  See the Support and Community section for details. ### GitHub Discussions  This is the preferred venue for bug reports and feature requests.  - Bug Reports - Q&A Forum - API Feature Requests  ### Discord Join our Discord! Good for quick questions, chatting about thing you've made with our APIs! 

API version: 0.0.0
Contact: support@kagi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TranslateWordInsights200ResponseInsightsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslateWordInsights200ResponseInsightsInner{}

// TranslateWordInsights200ResponseInsightsInner struct for TranslateWordInsights200ResponseInsightsInner
type TranslateWordInsights200ResponseInsightsInner struct {
	// Identifier matching the marker in marked_translation
	Id *string `json:"id,omitempty"`
	// The original word or phrase from the translated text
	OriginalText *string `json:"original_text,omitempty"`
	// Alternative expressions with explanations
	Variations []TranslateWordInsights200ResponseInsightsInnerVariationsInner `json:"variations,omitempty"`
	// Category of the insight in the explanation language
	Type *string `json:"type,omitempty"`
}

// NewTranslateWordInsights200ResponseInsightsInner instantiates a new TranslateWordInsights200ResponseInsightsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslateWordInsights200ResponseInsightsInner() *TranslateWordInsights200ResponseInsightsInner {
	this := TranslateWordInsights200ResponseInsightsInner{}
	return &this
}

// NewTranslateWordInsights200ResponseInsightsInnerWithDefaults instantiates a new TranslateWordInsights200ResponseInsightsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslateWordInsights200ResponseInsightsInnerWithDefaults() *TranslateWordInsights200ResponseInsightsInner {
	this := TranslateWordInsights200ResponseInsightsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TranslateWordInsights200ResponseInsightsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TranslateWordInsights200ResponseInsightsInner) SetId(v string) {
	o.Id = &v
}

// GetOriginalText returns the OriginalText field value if set, zero value otherwise.
func (o *TranslateWordInsights200ResponseInsightsInner) GetOriginalText() string {
	if o == nil || IsNil(o.OriginalText) {
		var ret string
		return ret
	}
	return *o.OriginalText
}

// GetOriginalTextOk returns a tuple with the OriginalText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) GetOriginalTextOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalText) {
		return nil, false
	}
	return o.OriginalText, true
}

// HasOriginalText returns a boolean if a field has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) HasOriginalText() bool {
	if o != nil && !IsNil(o.OriginalText) {
		return true
	}

	return false
}

// SetOriginalText gets a reference to the given string and assigns it to the OriginalText field.
func (o *TranslateWordInsights200ResponseInsightsInner) SetOriginalText(v string) {
	o.OriginalText = &v
}

// GetVariations returns the Variations field value if set, zero value otherwise.
func (o *TranslateWordInsights200ResponseInsightsInner) GetVariations() []TranslateWordInsights200ResponseInsightsInnerVariationsInner {
	if o == nil || IsNil(o.Variations) {
		var ret []TranslateWordInsights200ResponseInsightsInnerVariationsInner
		return ret
	}
	return o.Variations
}

// GetVariationsOk returns a tuple with the Variations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) GetVariationsOk() ([]TranslateWordInsights200ResponseInsightsInnerVariationsInner, bool) {
	if o == nil || IsNil(o.Variations) {
		return nil, false
	}
	return o.Variations, true
}

// HasVariations returns a boolean if a field has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) HasVariations() bool {
	if o != nil && !IsNil(o.Variations) {
		return true
	}

	return false
}

// SetVariations gets a reference to the given []TranslateWordInsights200ResponseInsightsInnerVariationsInner and assigns it to the Variations field.
func (o *TranslateWordInsights200ResponseInsightsInner) SetVariations(v []TranslateWordInsights200ResponseInsightsInnerVariationsInner) {
	o.Variations = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TranslateWordInsights200ResponseInsightsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TranslateWordInsights200ResponseInsightsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TranslateWordInsights200ResponseInsightsInner) SetType(v string) {
	o.Type = &v
}

func (o TranslateWordInsights200ResponseInsightsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslateWordInsights200ResponseInsightsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OriginalText) {
		toSerialize["original_text"] = o.OriginalText
	}
	if !IsNil(o.Variations) {
		toSerialize["variations"] = o.Variations
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableTranslateWordInsights200ResponseInsightsInner struct {
	value *TranslateWordInsights200ResponseInsightsInner
	isSet bool
}

func (v NullableTranslateWordInsights200ResponseInsightsInner) Get() *TranslateWordInsights200ResponseInsightsInner {
	return v.value
}

func (v *NullableTranslateWordInsights200ResponseInsightsInner) Set(val *TranslateWordInsights200ResponseInsightsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslateWordInsights200ResponseInsightsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslateWordInsights200ResponseInsightsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslateWordInsights200ResponseInsightsInner(val *TranslateWordInsights200ResponseInsightsInner) *NullableTranslateWordInsights200ResponseInsightsInner {
	return &NullableTranslateWordInsights200ResponseInsightsInner{value: val, isSet: true}
}

func (v NullableTranslateWordInsights200ResponseInsightsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslateWordInsights200ResponseInsightsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


